buildscript {

    repositories {

        jcenter()

        maven {

            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }

        maven {

            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {

        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.0.7"
    }
}

apply plugin: "maven"

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: "com.matthewprenger.cursegradle"

group = "net.darkhax.worldprotect"
archivesBaseName = "DarkUtilities"
version = getVersionFromJava(file("src/main/java/net/darkhax/worldprotect/libs/Constants.java"))

//Defines the MC environment information.
minecraft {

    useDepAts = true
    version = "1.9-12.16.0.1863-1.9"
    runDir = "run"
    mappings = 'snapshot_20160412'
}

//Defines basic patterns for pulling various dependencies.
repositories {

    maven {

        url "http://dvs1.progwml6.com/files/maven"
    }

    maven {

        url "http://mobiusstrip.eu/maven"
    }

    maven {

        url = "http://maven.rubbix.net"
    }

    
    ivy {

        name "Baubles"
        artifactPattern "http://addons-origin.cursecdn.com/files/2293/585/[module]-[revision].[ext]"
    }
}

dependencies {

    deobfCompile "mezz.jei:jei_1.9:3.2.10.185"
    deobfCompile "mcp.mobius.waila:Waila:1.7.0-B2_1.9"
    deobfCompile name: "Baubles", version: "1.9-1.2.0.1", ext: "jar"
    deobfCompile "net.darkhax.bookshelf:Bookshelf:1.9-1.2.0.219"
}

//Handles basic resources such as mcmod.info
processResources {

    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {

        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {

        exclude 'mcmod.info'
    }
}

//Pulls the build version from a Java file.
String getVersionFromJava(File file) {

    String release = "0";
    String update = "0";
    String patch = "0";

    String build = System.getenv("BUILD_NUMBER") ? System.getenv("BUILD_NUMBER") : "0";
    def outfile = "";
    def ln = System.getProperty("line.separator")

    String prefix = "public static final String VERSION_NUMBER = \"";
    file.eachLine {
        String s ->

            String v = s.trim();

        if (v.startsWith(prefix)) {

            v = v.substring(prefix.length(), v.length() - 2);
            String[] pts = v.split("\\.");

            release = pts[0];
            update = pts[1];
            patch = pts[2];
            s = s.replaceAll(".0\";", ".${build}\";");
        }

        outfile += (s + ln);
    }

    file.write(outfile);

    return "1.9-$release.$update.$patch.$build";
}

//Creates the source jar.
task sourcesJar(type: Jar, dependsOn: classes) {

    from sourceSets.main.allSource
    classifier = 'sources'
}

//Creates the JavaDoc jar.
task javadocJar(type: Jar, dependsOn: javadoc) {

    from javadoc.destinationDir
    classifier = 'javadoc'
}

//Creates the deobfuscated jar.
task deobfJar(type: Jar) {

    from sourceSets.main.output
    classifier = "deobf"
}

//Adds the deobf, source and javadoc jars to the build artifacts.
artifacts {

    archives deobfJar
    archives sourcesJar
    archives javadocJar
}

//Uploads the artifacts to the maven server.
uploadArchives {

    repositories {

        mavenDeployer {

            repository(url: "file:///var/www/html/maven")
        }
    }
}

task setCurseForgeInfo() {

    project.ext.changelog = "All changes can be found here: https://github.com/Darkhax-Minecraft/WorldProtect/commits/master";
}

//Prevents incomplete JavaDocs from preventing a build on Java 8.
if (JavaVersion.current().isJava8Compatible()) {

    allprojects {

        tasks.withType(Javadoc) {

            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

//Provides the basic CurseForge upload details
curseforge {

    //Sets the API from the system environment, if available.
    apiKey = System.getenv("curseForgeApiKey") ? System.getenv("curseForgeApiKey") : "0";

    project {

        //Sets the Project ID from the system environment, if available.
        id = System.getenv("projectId") ? System.getenv("projectId") : "0";

        releaseType = "alpha";
        changelog = project.changelog;

        addGameVersion "1.9"
        
        //Adds main jar, deobf jar, source jar, and javadoc jar to the upload.
        mainArtifact(jar) {
          
            relations {

                //Adds the file relations to the upload.
                requiredLibrary 'bookshelf'
                //optionalLibrary 'thaumcraft'
                optionalLibrary 'waila'
                optionalLibrary 'baubles'
            }
        }
        
        addArtifact(deobfJar)
        addArtifact(sourcesJar)
        addArtifact(javadocJar)
    }
}